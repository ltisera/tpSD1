# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import receta_pb2 as receta__pb2


class servicioRecetaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.traerRecetasPor = channel.unary_unary(
                '/servicioReceta/traerRecetasPor',
                request_serializer=receta__pb2.traerRecetasPorRequest.SerializeToString,
                response_deserializer=receta__pb2.traerRecetasPorResponse.FromString,
                )
        self.crearReceta = channel.unary_unary(
                '/servicioReceta/crearReceta',
                request_serializer=receta__pb2.crearRecetaRequest.SerializeToString,
                response_deserializer=receta__pb2.status.FromString,
                )
        self.agregarRecetaAFavoritos = channel.unary_unary(
                '/servicioReceta/agregarRecetaAFavoritos',
                request_serializer=receta__pb2.agregarRecetaAFavoritosRequest.SerializeToString,
                response_deserializer=receta__pb2.agregarRecetaAFavoritosResponse.FromString,
                )
        self.traerRecetasFavoritas = channel.unary_unary(
                '/servicioReceta/traerRecetasFavoritas',
                request_serializer=receta__pb2.traerRecetasFavoritasRequest.SerializeToString,
                response_deserializer=receta__pb2.traerRecetasPorResponse.FromString,
                )
        self.traerReceta = channel.unary_unary(
                '/servicioReceta/traerReceta',
                request_serializer=receta__pb2.traerRecetaRequest.SerializeToString,
                response_deserializer=receta__pb2.receta.FromString,
                )


class servicioRecetaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def traerRecetasPor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def crearReceta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def agregarRecetaAFavoritos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def traerRecetasFavoritas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def traerReceta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_servicioRecetaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'traerRecetasPor': grpc.unary_unary_rpc_method_handler(
                    servicer.traerRecetasPor,
                    request_deserializer=receta__pb2.traerRecetasPorRequest.FromString,
                    response_serializer=receta__pb2.traerRecetasPorResponse.SerializeToString,
            ),
            'crearReceta': grpc.unary_unary_rpc_method_handler(
                    servicer.crearReceta,
                    request_deserializer=receta__pb2.crearRecetaRequest.FromString,
                    response_serializer=receta__pb2.status.SerializeToString,
            ),
            'agregarRecetaAFavoritos': grpc.unary_unary_rpc_method_handler(
                    servicer.agregarRecetaAFavoritos,
                    request_deserializer=receta__pb2.agregarRecetaAFavoritosRequest.FromString,
                    response_serializer=receta__pb2.agregarRecetaAFavoritosResponse.SerializeToString,
            ),
            'traerRecetasFavoritas': grpc.unary_unary_rpc_method_handler(
                    servicer.traerRecetasFavoritas,
                    request_deserializer=receta__pb2.traerRecetasFavoritasRequest.FromString,
                    response_serializer=receta__pb2.traerRecetasPorResponse.SerializeToString,
            ),
            'traerReceta': grpc.unary_unary_rpc_method_handler(
                    servicer.traerReceta,
                    request_deserializer=receta__pb2.traerRecetaRequest.FromString,
                    response_serializer=receta__pb2.receta.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'servicioReceta', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class servicioReceta(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def traerRecetasPor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/servicioReceta/traerRecetasPor',
            receta__pb2.traerRecetasPorRequest.SerializeToString,
            receta__pb2.traerRecetasPorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def crearReceta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/servicioReceta/crearReceta',
            receta__pb2.crearRecetaRequest.SerializeToString,
            receta__pb2.status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def agregarRecetaAFavoritos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/servicioReceta/agregarRecetaAFavoritos',
            receta__pb2.agregarRecetaAFavoritosRequest.SerializeToString,
            receta__pb2.agregarRecetaAFavoritosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def traerRecetasFavoritas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/servicioReceta/traerRecetasFavoritas',
            receta__pb2.traerRecetasFavoritasRequest.SerializeToString,
            receta__pb2.traerRecetasPorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def traerReceta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/servicioReceta/traerReceta',
            receta__pb2.traerRecetaRequest.SerializeToString,
            receta__pb2.receta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
